{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","services/api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/FormContact/FormContact.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","components/App/App.jsx","index.js","components/FormContact/FormContact.module.css"],"names":["module","exports","filterContact","createAction","fetchContacts","a","axios","get","data","addContact","name","number","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_value","rejectWithValue","contactsAPI","message","contact","items","createReducer","fulfilled","_","payload","state","filter","loading","pending","rejected","error","console","log","combineReducers","store","configureStore","reducer","contacts","contactsReducer","getItems","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","FormContact","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","target","value","resetState","className","s","form","onSubmit","e","preventDefault","find","item","duplicateValidator","operations","toast","warn","label","input_name","type","pattern","onChange","title","required","input_number","button","btnText","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","useEffect","map","Filter","filterInput","actions","Container","children","container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78c53ce5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__RWhuQ\",\"listItemText\":\"ContactListItem_listItemText__2dzln\",\"button\":\"ContactListItem_button__15AFZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2ygUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2EL12\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { FILTER } from './contacts-types';\r\n\r\nexport const filterContact = createAction(FILTER);\r\n","export const ADD = 'contacts/AddContact';\r\nexport const DELETE = 'contacts/Delete';\r\nexport const FETCH = 'contacts/FetchContacts';\r\nexport const FILTER = 'contacts/changeFilter';\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61f1876a072f86001749f26d.mockapi.io';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n\r\n  return data;\r\n}\r\n\r\nexport async function addContact(name, number) {\r\n  const { data } = await axios.post(`/contacts`, {\r\n    name,\r\n    number,\r\n  });\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}\r\n","import * as contactsAPI from '../../services/api';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { FETCH, ADD, DELETE } from './contacts-types';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  FETCH,\r\n  async (_value, { rejectWithValue }) => {\r\n    try {\r\n      return await contactsAPI.fetchContacts();\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  ADD,\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      return await contactsAPI.addContact(name, number);\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  DELETE,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const contact = await contactsAPI.deleteContact(id);\r\n      return contact.id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { filterContact } from './contacts-actions';\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './contacts-operations';\r\n\r\nconst contactsInitial = [];\r\n\r\nconst items = createReducer(contactsInitial, {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: error => console.log(error),\r\n  [fetchContacts.pending]: () => null,\r\n  [addContact.rejected]: error => console.log(error),\r\n  [addContact.pending]: () => null,\r\n  [deleteContact.rejected]: error => console.log(error),\r\n  [deleteContact.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  getItems,\r\n  getFilter,\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { getItems } from '../../redux/contacts/contacts-selectors';\nimport s from './FormContact.module.css';\n\nfunction FormContact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicateValidator = name => items.find(item => item.name === name);\n\n    duplicateValidator(name)\n      ? toast.warn(`${name} is already in your phonebook`)\n      : dispatch(operations.addContact({ name, number }));\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input_name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input_number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          onChange={handleChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}>Add contact</span>\n      </button>\n    </form>\n  );\n}\n\nexport default FormContact;\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({\n  id,\n  contactName,\n  contactNumber,\n  onClickDeleteContact,\n}) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.listItemText}>{contactName}:</span>\n      <span className={s.listItemText}>{contactNumber}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => onClickDeleteContact(id)}\n      >\n        Delete contact\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport ContactListItem from '../ContactList/ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const items = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul>\n      {items.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          contactName={name}\n          contactNumber={number}\n          onClickDeleteContact={() => dispatch(operations.deleteContact(id))}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(actions.filterContact(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import FormContact from '../FormContact';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport Container from '../Container';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <FormContact />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__1bRE6\",\"label\":\"FormContact_label__3e2ZE\",\"input_name\":\"FormContact_input_name__2PHqf\",\"input_number\":\"FormContact_input_number__1S3p-\",\"button\":\"FormContact_button__1c5kU\",\"btnText\":\"FormContact_btnText__1qsTZ\"};"],"sourceRoot":""}