{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","services/api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/FormContact/FormContact.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","components/App/App.jsx","index.js","components/FormContact/FormContact.module.css"],"names":["module","exports","filterContact","createAction","fetchContacts","a","axios","get","data","addContact","name","number","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsAPI","contacts","message","contact","contactsReducer","createSlice","initialState","items","filter","error","reducers","actions","state","payload","extraReducers","fulfilled","rejected","reducer","store","configureStore","getItems","getFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","FormContact","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","resetState","className","s","form","onSubmit","preventDefault","find","item","duplicateValidator","operations","toast","warn","label","input_name","type","pattern","onChange","title","required","input_number","button","btnText","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","useEffect","map","autoClose","Filter","filterInput","Container","children","container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e21f521c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__RWhuQ\",\"listItemText\":\"ContactListItem_listItemText__2dzln\",\"button\":\"ContactListItem_button__15AFZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2ygUU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2EL12\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { FILTER } from './contacts-types';\r\n\r\nexport const filterContact = createAction(FILTER);\r\n","export const ADD = 'contacts/AddContact';\r\nexport const DELETE = 'contacts/Delete';\r\nexport const FETCH = 'contacts/FetchContacts';\r\nexport const FILTER = 'contacts/Filter';\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61f1876a072f86001749f26d.mockapi.io';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n\r\n  return data;\r\n}\r\n\r\nexport async function addContact(name, number) {\r\n  const { data } = await axios.post(`/contacts`, {\r\n    name,\r\n    number,\r\n  });\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}\r\n","import * as contactsAPI from '../../services/api';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { FETCH, ADD, DELETE } from './contacts-types';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  FETCH,\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsAPI.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  ADD,\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const contact = await contactsAPI.addContact(name, number);\r\n      return contact;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  DELETE,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const contact = await contactsAPI.deleteContact(id);\r\n      return contact.id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as actions from './contacts-actions';\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n  addContact,\r\n} from './contacts-operations';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: { items: [], filter: '', error: null },\r\n  reducers: {\r\n    [actions.filterContact]: (state, { payload }) => {\r\n      state.filter = payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (state, { payload }) => {\r\n      state.items = payload;\r\n    },\r\n    [addContact.fulfilled]: (state, { payload }) => {\r\n      state.items = [...state.items, payload];\r\n    },\r\n\r\n    [deleteContact.fulfilled]: (state, { payload }) => {\r\n      state.items = state.items.filter(({ id }) => id !== payload);\r\n    },\r\n    [fetchContacts.rejected]: (state, { payload }) => {\r\n      state.error = payload;\r\n    },\r\n    [addContact.rejected]: (state, { payload }) => {\r\n      state.error = payload;\r\n    },\r\n    [deleteContact.rejected]: (state, { payload }) => {\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst contactsReducer = contactsSlice.reducer;\r\n\r\nexport default contactsReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { getItems } from '../../redux/contacts/contacts-selectors';\nimport s from './FormContact.module.css';\n\nfunction FormContact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicateValidator = name => items.find(item => item.name === name);\n\n    duplicateValidator(name)\n      ? toast.warn(`${name} is already in your phonebook`)\n      : dispatch(operations.addContact({ name, number }));\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input_name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input_number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          onChange={handleChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}>Add contact</span>\n      </button>\n    </form>\n  );\n}\n\nexport default FormContact;\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({\n  contactName,\n  contactNumber,\n  onClickDeleteContact,\n}) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.listItemText}>{contactName}:</span>\n      <span className={s.listItemText}>{contactNumber}</span>\n      <button className={s.button} type=\"button\" onClick={onClickDeleteContact}>\n        Delete contact\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport ContactListItem from '../ContactList/ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const items = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul>\n      {items.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          contactName={name}\n          contactNumber={number}\n          onClickDeleteContact={() => {\n            dispatch(operations.deleteContact(id));\n            toast('Deleted', { autoClose: 1000 });\n          }}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(actions.filterContact(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import FormContact from '../FormContact';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport Container from '../Container';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <FormContact />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__1bRE6\",\"label\":\"FormContact_label__3e2ZE\",\"input_name\":\"FormContact_input_name__2PHqf\",\"input_number\":\"FormContact_input_number__1S3p-\",\"button\":\"FormContact_button__1c5kU\",\"btnText\":\"FormContact_btnText__1qsTZ\"};"],"sourceRoot":""}